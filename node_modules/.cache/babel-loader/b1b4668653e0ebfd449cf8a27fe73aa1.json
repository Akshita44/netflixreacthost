{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: {\n    email: \"\"\n  }\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setsignin: (state, action) => {\n      state.user.email = action.payload.email;\n    },\n    setsignout: state => {\n      state.user.email = null;\n    } // setsignup:(state,action)=>{\n    //   state.user.u=action.payload.u;\n    // }\n\n  }\n});\nexport const {\n  setsignin,\n  setsignout\n} = userSlice.actions;\nexport const selectemail = state => state.user.user.email; // export const selectu = (state) => state.user.user.u;\n\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/React_JS/Practice/netflix/src/features/user/userSlice.js"],"names":["createSlice","initialState","user","email","userSlice","name","reducers","setsignin","state","action","payload","setsignout","actions","selectemail","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,KAAK,EAAC;AADH;AADc,CAArB;AAMA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AACnCK,EAAAA,IAAI,EAAE,MAD6B;AAEnCJ,EAAAA,YAFmC;AAGnC;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC3BD,MAAAA,KAAK,CAACN,IAAN,CAAWC,KAAX,GAAkBM,MAAM,CAACC,OAAP,CAAeP,KAAjC;AACD,KAHO;AAIRQ,IAAAA,UAAU,EAAGH,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACN,IAAN,CAAWC,KAAX,GAAkB,IAAlB;AACD,KANO,CAOR;AACA;AACA;;AATQ;AAJyB,CAAD,CAA7B;AAiBP,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAaI,EAAAA;AAAb,IAA2BP,SAAS,CAACQ,OAA3C;AAEP,OAAO,MAAMC,WAAW,GAAIL,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWA,IAAX,CAAgBC,KAA/C,C,CACP;;AAEA,eAAeC,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user:{\n    email:\"\",\n  }\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setsignin: (state,action) => {\n      state.user.email= action.payload.email;\n    },\n    setsignout: (state) => {\n      state.user.email= null\n    },\n    // setsignup:(state,action)=>{\n    //   state.user.u=action.payload.u;\n    // }\n  }\n});\n\nexport const { setsignin, setsignout} = userSlice.actions;\n\nexport const selectemail = (state) => state.user.user.email;\n// export const selectu = (state) => state.user.user.u;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}