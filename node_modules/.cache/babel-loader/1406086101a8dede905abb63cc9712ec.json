{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: {\n    email: \"\",\n    u: true\n  }\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setsignin: (state, action) => {\n      state.user.email = action.payload.email;\n    },\n    setsignout: state => {\n      state.user.email = null;\n    },\n    setsignup: (state, action) => {\n      state.user.u = action.payload.u;\n    }\n  }\n});\nexport const {\n  setsignin,\n  setsignout,\n  setsignup\n} = userSlice.actions;\nexport const selectemail = state => state.user.user.email;\nexport const selectu = state => state.user.user.u;\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/React_JS/Practice/netflixhost/src/features/user/userSlice.js"],"names":["createSlice","initialState","user","email","u","userSlice","name","reducers","setsignin","state","action","payload","setsignout","setsignup","actions","selectemail","selectu","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,KAAK,EAAC,EADH;AAEHC,IAAAA,CAAC,EAAC;AAFC;AADc,CAArB;AAOA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,MAD6B;AAEnCL,EAAAA,YAFmC;AAGnC;AACAM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC3BD,MAAAA,KAAK,CAACP,IAAN,CAAWC,KAAX,GAAkBO,MAAM,CAACC,OAAP,CAAeR,KAAjC;AACD,KAHO;AAIRS,IAAAA,UAAU,EAAGH,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACP,IAAN,CAAWC,KAAX,GAAkB,IAAlB;AACD,KANO;AAORU,IAAAA,SAAS,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AACxBD,MAAAA,KAAK,CAACP,IAAN,CAAWE,CAAX,GAAaM,MAAM,CAACC,OAAP,CAAeP,CAA5B;AACD;AATO;AAJyB,CAAD,CAA7B;AAiBP,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAaI,EAAAA,UAAb;AAAwBC,EAAAA;AAAxB,IAAqCR,SAAS,CAACS,OAArD;AAEP,OAAO,MAAMC,WAAW,GAAIN,KAAD,IAAWA,KAAK,CAACP,IAAN,CAAWA,IAAX,CAAgBC,KAA/C;AACP,OAAO,MAAMa,OAAO,GAAIP,KAAD,IAAWA,KAAK,CAACP,IAAN,CAAWA,IAAX,CAAgBE,CAA3C;AAEP,eAAeC,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user:{\n    email:\"\",\n    u:true\n  }\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setsignin: (state,action) => {\n      state.user.email= action.payload.email;\n    },\n    setsignout: (state) => {\n      state.user.email= null\n    },\n    setsignup:(state,action)=>{\n      state.user.u=action.payload.u;\n    }\n  }\n});\n\nexport const { setsignin, setsignout,setsignup} = userSlice.actions;\n\nexport const selectemail = (state) => state.user.user.email;\nexport const selectu = (state) => state.user.user.u;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}