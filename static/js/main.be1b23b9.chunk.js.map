{"version":3,"sources":["firebase.js","features/user/userSlice.js","loginpage.js","Homenav.js","axios.js","requests.js","Banner.js","Row.js","home.js","siginpage.js","Profile.js","signup.js","private.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","userSlice","createSlice","name","initialState","user","email","u","reducers","setsignin","state","action","payload","setsignout","setsignup","actions","selectemail","Loginpage","useState","setstate","history","useHistory","dispatch","useDispatch","useremail","useSelector","useEffect","onAuthStateChanged","a","push","className","to","src","alt","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","required","style","textDecoration","fontSize","color","Homenav","blackshow","setshow","scrolls","window","scrollY","addEventListener","id","href","api","axios","create","baseURL","apikey","requests","fetchTrending","fetchNetflixOriginals","fetchtoprated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","data","setdata","des","useRef","ref","get","results","Math","floor","random","length","apidata","overview","interval","setTimeout","current","display","marginTop","transition","clearInterval","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","original_name","x","slice","description","marginRight","Row","title","fetchurl","rdata","rowdata","console","log","map","element","poster_path","Home","backgroundColor","request","Siginpage","username","setuser","err","seterror","password","signInWithEmailAndPassword","then","result","catch","message","width","Profile","height","padding","onClick","signOut","Signup","props","useParams","createUserWithEmailAndPassword","r","PrivateRoute","Component","component","rest","render","App","us","path","exact","store","configureStore","reducer","userreducer","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"obAaaA,GAFKC,IAASC,cATN,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGEC,YACHT,IAASD,Q,QCJdW,EAAYC,YAAY,CACnCC,KAAM,OACNC,aATmB,CACnBC,KAAK,CACHC,MAAM,GACNC,GAAE,IAQJC,SAAU,CACRC,UAAW,SAACC,EAAMC,GAChBD,EAAML,KAAKC,MAAOK,EAAOC,QAAQN,OAEnCO,WAAY,SAACH,GACXA,EAAML,KAAKC,MAAO,MAEpBQ,UAAU,SAACJ,EAAMC,GACfD,EAAML,KAAKE,EAAEI,EAAOC,QAAQL,MAK3B,EAA2CN,EAAUc,QAA7CN,EAAR,EAAQA,UAAWI,EAAnB,EAAmBA,WAEbG,GAFN,EAA8BF,UAEV,SAACJ,GAAD,OAAWA,EAAML,KAAKA,KAAKC,QAGvCL,IAAf,Q,OCyBegB,MAjDf,WACI,MAAuBC,mBAAS,IAAhC,mBAAOR,EAAP,KAAaS,EAAb,KACMC,EAAQC,cACRC,EAASC,cACXC,EAAUC,YAAYT,GAiB1B,OAhBAU,qBAAU,WACNpC,EAAKqC,mBAAL,+BAAAC,EAAA,MAAwB,WAAMvB,GAAN,SAAAuB,EAAA,sDAEjBvB,IAGCiB,EAASb,EAAU,CACfH,MAAMD,EAAKC,SAEfc,EAAQS,KAAK,UARG,2CAAxB,yDAWF,CAACL,IAKC,mCACA,qBAAKM,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACA,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACJ,qBAAKC,IAAI,gEAAgEC,IAAI,OAC9E,eAAC,IAAD,CAAMF,GAAG,UAAT,cAAoB,wBAAQD,UAAU,MAAlB,2BACnB,sBAAKA,UAAU,eAAf,UACI,uDACA,iDACA,iEACA,wGACA,uBAAMI,SAhBlB,SAAsBC,GAClBA,EAAEC,kBAeM,UACA,uBAAOC,KAAK,QAAQC,YAAY,gBAAgBC,SAAU,SAACJ,GAAKhB,EAASgB,EAAEK,OAAOC,QAASC,UAAQ,IAClGhC,EAAO,cAAC,IAAD,CAAMqB,GAAE,kBAAarB,GAASiC,MAAO,CAACC,eAAe,QAArD,SACL,yBAAQP,KAAK,SAAb,wBAAiC,cAAC,IAAD,CAAkBQ,SAAS,QAAQF,MAAO,CAACG,MAAM,gBAE5E,yBAAQT,KAAK,SAAb,wBAAiC,cAAC,IAAD,CAAkBQ,SAAS,QAAQF,MAAO,CAACG,MAAM,4B,MCZ5FC,MA/Bf,WACI,MAA0B7B,oBAAS,GAAnC,mBAAO8B,EAAP,KAAiBC,EAAjB,KACMC,EAAQ,WACPC,OAAOC,QAAU,IAEhBH,GAAQ,GAGRA,GAAQ,IAOhB,OAJAvB,qBAAU,WACNyB,OAAOE,iBAAiB,SAASH,KACnC,IAGE,mCACA,sBAAKpB,UAAS,kBAAakB,GAAa,gBAAxC,UAEI,qBAAKhB,IAAI,gEAAgEC,IAAI,GAAGqB,GAAG,gBACnF,+BACI,6BAAI,mBAAGC,KAAK,IAAR,oBACJ,6BAAI,mBAAGA,KAAK,YAAR,wBACJ,6BAAI,mBAAGA,KAAK,iBAAR,sBACJ,6BAAI,mBAAGA,KAAK,aAAR,4BAET,cAAC,IAAD,CAAMxB,GAAG,WAAWD,UAAU,OAA9B,SAAqC,qBAAKE,IAAI,6EAA6EC,IAAI,GAAGqB,GAAG,gB,QCvBjIE,E,OAJLC,EAAMC,OAAO,CACnBC,QAAQ,iC,0CCHNC,EAAO,mCAYEC,EAXA,CACXC,cAAc,8BAAD,OAA+BF,EAA/B,mBACbG,sBAAsB,wBAAD,OAAyBH,EAAzB,sBACrBI,cAAc,4BAAD,OAA6BJ,EAA7B,mBACbK,kBAAkB,2BAAD,OAA4BL,EAA5B,mBACjBM,kBAAkB,2BAAD,OAA4BN,EAA5B,mBACjBO,kBAAkB,2BAAD,OAA4BP,EAA5B,mBACjBQ,mBAAmB,2BAAD,OAA4BR,EAA5B,sBAClBS,mBAAmB,2BAAD,OAA4BT,EAA5B,oBC4CPU,MA/Cf,WACI,MAAqBpD,mBAAS,IAA9B,mBAAOqD,EAAP,KAAYC,EAAZ,KACMC,EAAIC,iBAAO,MACXC,EAAID,iBAAO,MA6BjB,OA5BAhD,qBAAU,YACO,uCAAE,8BAAAE,EAAA,sEACU6B,EAAMmB,IAAIf,EAASE,uBAD7B,gBACJQ,EADI,EACJA,KACNC,EAAQD,EAAKM,QAAQC,KAAKC,MAAMD,KAAKE,SAAST,EAAKM,QAAQI,OAAO,KAFxD,2CAAF,qDAIbC,KACF,IAEFxD,qBAAU,WACN,GAAG6C,EAAKY,SACR,IAAIC,EAASC,YAAW,WACpBZ,EAAIa,QAAQ3C,MAAM4C,QAAQ,OAC1BZ,EAAIW,QAAQ3C,MAAME,SAAS,OAC3B8B,EAAIW,QAAQ3C,MAAM6C,UAAU,OAC5Bb,EAAIW,QAAQ3C,MAAM8C,WAAW,gBAC9B,KACF,OAAO,WAAKC,cAAcN,MAC7B,CAACb,IAYC,qBAAKzC,UAAU,SAASa,MAAO,CAACgD,gBAAgB,4CAAD,cAA6CpB,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAMqB,cAAnD,MAC9CC,iBAAiB,YAAYC,eAAe,aAD7C,SAEI,sBAAKhE,UAAU,gBAAf,UACA,oBAAI6C,IAAKA,EAAT,UAAmB,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMpE,QAAN,OAAcoE,QAAd,IAAcA,OAAd,EAAcA,EAAMwB,iBACnC,oBAAIpB,IAAKF,EAAT,SAdR,WAA2B,IAANuB,EAAK,uDAAH,GACnB,OAAGA,EAAEf,OAAS,IAEJ,GAAN,OAAUe,EAAEC,MAAM,EAAE,KAApB,OAGOD,EAQQE,CAAW,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAMY,YACjC,sBAAKrD,UAAU,gBAAf,UACI,yBAAQA,UAAU,OAAlB,UAAyB,cAAC,IAAD,CAAgBa,MAAO,CAACwD,YAAY,OAAQtD,SAAS,UAA9E,UACA,yBAAQf,UAAU,OAAlB,UAAyB,cAAC,IAAD,CAAkBa,MAAO,CAACG,MAAM,QAAQqD,YAAY,OAAQtD,SAAS,UAA9F,wB,MCrBDuD,MAtBf,YAA+B,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,SAChB,EAAsBpF,mBAAS,IAA/B,mBAAOqF,EAAP,KAAa/B,EAAb,KASA,OARA9C,qBAAU,YACO,uCAAC,8BAAAE,EAAA,sEACS6B,EAAMmB,IAAI0B,GADnB,gBACH/B,EADG,EACHA,KACPC,EAAQD,EAAKM,SAFH,2CAAD,qDAIb2B,KACF,IACFC,QAAQC,IAAIH,GAER,sBAAKzE,UAAU,SAAf,UACI,oBAAIwB,GAAI+C,EAAR,SAAgBA,IAChB,qBAAKvE,UAAU,WAAf,SACCyE,EAAMI,KAAI,SAACC,GAAD,OACP,qBAAK9E,UAAU,QAAyBa,MAAO,CAACgD,gBAAgB,4CAAD,QAAoD,OAAPiB,QAAO,IAAPA,OAAA,EAAAA,EAASC,eAAT,OAAwBD,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAShB,eAA9E,QAAnCgB,EAAQtD,aCGrCwD,MAhBf,WACI,OACI,sBAAKnE,MAAO,CAACoE,gBAAgB,SAA7B,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAKV,MAAM,oBAAoBC,SAAUU,EAAQjD,wBACjD,cAAC,EAAD,CAAKsC,MAAM,WAAWC,SAAUU,EAAQlD,gBACxC,cAAC,EAAD,CAAKuC,MAAM,YAAYC,SAAUU,EAAQhD,gBACzC,cAAC,EAAD,CAAKqC,MAAM,gBAAgBC,SAAUU,EAAQ/C,oBAC7C,cAAC,EAAD,CAAKoC,MAAM,gBAAgBC,SAAUU,EAAQ9C,oBAC7C,cAAC,EAAD,CAAKmC,MAAM,gBAAgBC,SAAUU,EAAQ7C,oBAC7C,cAAC,EAAD,CAAKkC,MAAM,kBAAkBC,SAAUU,EAAQ5C,qBAC/C,cAAC,EAAD,CAAKiC,MAAM,gBAAgBC,SAAUU,EAAQ3C,yB,MCyCtC4C,MApDf,WACI,MAAyB/F,mBAAS,IAAlC,mBAAOgG,EAAP,KAAgBC,EAAhB,KACA,EAAqBjG,mBAAS,IAA9B,mBAAOkG,EAAP,KAAWC,EAAX,KACMjG,EAAQC,cACRC,EAASC,cACXC,EAAUC,YAAYT,GAEtBV,EAAMoE,iBAAO,MACb4C,EAAS5C,iBAAO,MAuBpB,OAHA+B,QAAQC,IAAIQ,GACZT,QAAQC,IAAIlF,GAGR,qBAAKM,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,CAAMC,GAAG,QAAT,SACJ,qBAAKC,IAAI,gEAAgEC,IAAI,SAC7E,sBAAKH,UAAU,OAAf,UACI,yCACA,uBAAMI,SA7BlB,SAAsBC,GAClBA,EAAEC,iBACF,IACI9C,EAAKiI,2BAA2BjH,EAAMgF,QAAQ7C,MAAM6E,EAAShC,QAAQ7C,OAAO+E,MAAK,SAACC,GAC9EnG,EAASb,EAAU,CACfH,MAAMmH,EAAOpH,KAAKC,SAEtB6G,EAAQM,EAAOpH,KAAKC,OACpBc,EAAQS,KAAK,YACd6F,OAAM,SAACvF,GACNsE,QAAQC,IAAIvE,GACZkF,EAASlF,EAAEwF,YAGnB,MAAMxF,GACFsE,QAAQC,IAAIvE,KAcR,UACI,qBAAKL,UAAU,QAAf,SAAuB,uBAAOO,KAAK,QAAQC,YAAY,QAAQqC,IAAKrE,MACpE,qBAAKwB,UAAU,QAAf,SAAuB,uBAAOO,KAAK,WAAWC,YAAY,WAAWqC,IAAK2C,MACzEF,GAAQ,qBAAKzE,MAAO,CAACiF,MAAM,SAAnB,SAA8BR,IACvC,uBAAO/E,KAAK,SAASI,MAAM,eAE/B,iDAAmB,cAAC,IAAD,CAAMV,GAAG,SAAT,SAAkB,6D,MCStC8F,MApDf,WACIpB,QAAQC,IAAI,2CACZ,IAAMpF,EAAUC,cACVH,EAAQC,cACRhB,EAAKoB,YAAYT,GAUvB,OADAyF,QAAQC,IAAIrG,GAER,sBAAKsC,MAAO,CAACoE,gBAAgB,QAAQa,MAAM,QAAQE,OAAO,SAA1D,UACA,sBAAKhG,UAAS,WAAd,UACI,qBAAKE,IAAI,gEAAgEC,IAAI,GAAGqB,GAAG,iBACnF,sBAAKX,MAAO,CAAC4C,QAAQ,QAArB,UACA,cAAC,IAAD,CAAMxD,GAAG,UAAT,SAAmB,wBAAQD,UAAU,MAAlB,uBACnB,qBAAKE,IAAI,6EAA6EC,IAAI,GAAGqB,GAAG,eAEpG,sBAAKxB,UAAU,QAAf,UACI,8CACA,sBAAKa,MAAO,CAAC4C,QAAQ,QAArB,UACA,qBAAKvD,IAAI,6EAA6EC,IAAI,GAAGqB,GAAG,UAChG,sBAAKxB,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBzB,IACxB,qBAAKsC,MAAO,CAACE,SAAS,OAAOkF,QAAQ,OAArC,yCACA,sBAAKjG,UAAU,SAAf,UACI,wDACA,sBAAKA,UAAU,YAAf,UACI,gCAAK,kDAAyB,yCAC9B,kDAEJ,sBAAKA,UAAU,YAAf,UACA,gCAAK,+CAAsB,wCAC3B,kDAEA,sBAAKA,UAAU,YAAf,UACA,gCAAK,iDAAwB,0CAC7B,qDAGJ,wBAAQA,UAAU,UAAUkG,QAvCxC,WACI1I,EAAK2I,UAAUT,MAAK,WACflG,EAAST,KACTO,EAAQS,KAAK,cACf6F,OAAM,SAACvF,GACNsE,QAAQC,IAAIvE,OAkCR,mC,MCAD+F,MA7Cf,SAAgBC,GACZ,IAAM/G,EAAQC,cACPiC,EAAI8E,cAAJ9E,GACDqB,EAAID,mBAEV,EAAqBxD,mBAAS,IAA9B,mBAAOkG,EAAP,KAAWC,EAAX,KAkBA,OACI,mCACA,sBAAK1E,MAAO,CAACoE,gBAAgB,SAA7B,UACA,sBAAKjF,UAAU,UAAf,UACQ,cAAC,IAAD,CAAMC,GAAG,IAAT,SACJ,qBAAKC,IAAI,gEAAgEC,IAAI,OAC9E,eAAC,IAAD,CAAMF,GAAG,UAAT,cAAoB,wBAAQD,UAAU,MAAlB,2BACnB,sBAAKA,UAAU,eAAf,UACI,0DACA,yFACA,sCACA,4BAAG,4BAAIwB,MACP,uBAAMpB,SA3BlB,SAAsBC,GAClBA,EAAEC,iBACF,IACI9C,EAAK+I,+BAA+B/E,EAAGqB,EAAIW,QAAQ7C,OAAO+E,MAAK,SAACc,GAC5D7B,QAAQC,IAAI4B,GAChBlH,EAAQS,KAAK,eACV6F,OAAM,SAACvF,GACNsE,QAAQC,IAAIvE,GACZkF,EAASlF,EAAEwF,YAGnB,MAAMxF,GACFsE,QAAQC,IAAIvE,KAeR,UACA,uBAAOE,KAAK,WAAWC,YAAY,sBAAsBqC,IAAKA,EAAKjC,UAAQ,IAC1E0E,GAAQ,8BAAMA,IACf,wBAAQ/E,KAAK,SAAb,8B,gCCxCD,SAASkG,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,iBAGlEnI,EAAEkB,YAAYT,GAElB,OADFyF,QAAQC,IAAInG,GAER,cAAC,IAAD,2BACMmI,GADN,IAEEC,OAAQ,SAAAR,GACN,OAAO5H,EAAI,cAACiI,EAAD,eAAeL,IAAY,cAAC,IAAD,CAAUpG,GAAG,eCiB5C6G,MAnBf,WACE,IAAMC,EAAGpH,YAAYT,GAErB,OADAyF,QAAQC,IAAImC,GAER,mCACF,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAACN,EAAD,CAAcO,KAAK,IAAIC,OAAK,EAACN,UAAW3B,IACxC,cAACyB,EAAD,CAAcQ,OAAK,EAACD,KAAK,QAAQL,UAAW3B,IAE5C,cAAC,IAAD,CAAOgC,KAAK,SAAZ,SAAqB,cAAC,EAAD,MACrB,cAAC,IAAD,CAAOA,KAAK,UAAZ,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOA,KAAK,cAAZ,SAA0B,cAAC,EAAD,MAC1B,cAAC,IAAD,CAAOA,KAAK,WAAZ,SAAuB,cAAC,EAAD,cCvBhBE,EAAQC,YAAe,CAClCC,QAAS,CACP7I,KAAM8I,KCQUC,QACW,cAA7BjG,OAAOkG,SAASC,UAEe,UAA7BnG,OAAOkG,SAASC,UAEhBnG,OAAOkG,SAASC,SAASC,MACvB,2DCVNC,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,MAAK,SAACuC,GAClCA,EAAaC,kB","file":"static/js/main.be1b23b9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA4UJgBcJ7Mkp0K3WC9ocLCw2keMqoo5Mk\",\r\n    authDomain: \"netflix-89996.firebaseapp.com\",\r\n    projectId: \"netflix-89996\",\r\n    storageBucket: \"netflix-89996.appspot.com\",\r\n    messagingSenderId: \"283259047275\",\r\n    appId: \"1:283259047275:web:0124b66f0051764653902e\",\r\n    measurementId: \"G-DLJQV0T00G\"\r\n  };\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\r\nconst db=firebaseApp.firestore();\r\nexport const auth=firebase.auth();\r\nexport default db;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user:{\n    email:\"\",\n    u:true\n  }\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setsignin: (state,action) => {\n      state.user.email= action.payload.email;\n    },\n    setsignout: (state) => {\n      state.user.email= null\n    },\n    setsignup:(state,action)=>{\n      state.user.u=action.payload.u;\n    }\n  }\n});\n\nexport const { setsignin, setsignout,setsignup} = userSlice.actions;\n\nexport const selectemail = (state) => state.user.user.email;\nexport const selectu = (state) => state.user.user.u;\n\nexport default userSlice.reducer;\n","import React,{useState,useEffect} from 'react'\r\nimport \"./login.css\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {auth} from \"./firebase\";\r\nimport {selectemail,setsignin} from \"./features/user/userSlice\";\r\nfunction Loginpage() {\r\n    const [state,setstate]=useState(\"\");\r\n    const history=useHistory();\r\n    const dispatch=useDispatch();\r\n  const useremail=useSelector(selectemail);\r\n    useEffect(()=>{\r\n        auth.onAuthStateChanged(async(user)=>{\r\n            // console.log(u);\r\n            if(user)\r\n            {\r\n                // console.log(\"hello2\");\r\n                dispatch(setsignin({\r\n                    email:user.email\r\n                }));\r\n                history.push(\"/home\");\r\n            }\r\n        })\r\n    },[useremail])\r\n    function handlesubmit(e){\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"loginpage\">\r\n            <div className=\"blackpage\">\r\n            <div className=\"lognav\">\r\n                <Link to=\"/\">\r\n            <img src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\" alt=\"\"></img></Link>\r\n           <Link to=\"/signin\"> <button className=\"btn\">Sign In</button></Link></div>\r\n            <div className=\"logincontent\">\r\n                <h1>Unlimited movies, TV </h1>\r\n                <h1>shows and more.</h1>\r\n                <h3>Watch anywhere. Cancel anytime.</h3>\r\n                <h4>Ready to watch? Enter your email to create or restart your membership.</h4>\r\n                <form onSubmit={handlesubmit}>\r\n                <input type=\"email\" placeholder=\"Email address\" onChange={(e)=>{setstate(e.target.value)}} required/>\r\n                {state?(<Link to={`/signup/${state}`} style={{textDecoration:\"none\"}}>\r\n                   <button type=\"submit\">Get Started<ChevronRightIcon fontSize=\"large\" style={{color:\"white\"}}/>\r\n               </button>\r\n               </Link>):(<button type=\"submit\">Get Started<ChevronRightIcon fontSize=\"large\" style={{color:\"white\"}}/>\r\n               </button>)}\r\n               </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginpage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./homenav.css\";\r\nimport {Link} from \"react-router-dom\";\r\nfunction Homenav() {\r\n    const [blackshow,setshow]=useState(false);\r\n    const scrolls=()=>{\r\n        if(window.scrollY > 100)\r\n        {\r\n            setshow(true);\r\n        }\r\n        else{\r\n            setshow(false);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",scrolls)\r\n    },[])\r\n   \r\n    return (\r\n        <>\r\n        <div className={`lognavs ${blackshow && \"lognav-black\"}`}>\r\n\r\n            <img src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\" alt=\"\" id=\"netflixlogo\"/>\r\n            <ul>\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><a href=\"#Trending\">Trending</a></li>\r\n                <li><a href=\"#Action Movies\">Movies</a></li>\r\n                <li><a href=\"#Top Rated\">Top Rated</a></li>\r\n            </ul>\r\n           <Link to=\"/profile\" className=\"link\"><img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"\" id=\"img\"/></Link>\r\n        </div></>\r\n    )\r\n}\r\n\r\nexport default Homenav;\r\n","import axios from \"axios\";\r\n\r\nconst api=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default api;\r\n","const apikey=\"d52427aedbce4f0f166f41134c6d0a70\";\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${apikey}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${apikey}&with_networks=213`,\r\n    fetchtoprated:`/movie/top_rated?api_key=${apikey}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${apikey}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${apikey}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${apikey}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${apikey}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${apikey}&with_genres=99`,\r\n}\r\n\r\nexport default requests;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport axios from \"./axios\";\r\nimport \"./banner.css\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport requests from \"./requests\";\r\nfunction Banner() {\r\n    const [data,setdata]=useState(\"\");\r\n    const des=useRef(null);\r\n    const ref=useRef(null);\r\n    useEffect(()=>{\r\n        const apidata =async()=>{\r\n            const {data} = await axios.get(requests.fetchNetflixOriginals);\r\n             setdata(data.results[Math.floor(Math.random()*data.results.length-1)]);  \r\n        }\r\n        apidata();\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(data.overview){\r\n        var interval=setTimeout(()=>{\r\n            des.current.style.display=\"none\";\r\n            ref.current.style.fontSize=\"55px\";\r\n            ref.current.style.marginTop=\"20px\";\r\n            ref.current.style.transition=\"all 2s ease\"\r\n         },5000)}\r\n         return ()=>{clearInterval(interval)}\r\n    },[data])\r\n    \r\n    function description(x=\"\"){\r\n        if(x.length > 150)\r\n        {\r\n            return `${x.slice(0,150)}...`;\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"banner\" style={{backgroundImage:`url('https://image.tmdb.org/t/p/original/${data?.backdrop_path}')`\r\n        ,backgroundRepeat:\"no-repeat\",backgroundSize:\"100% 100%\"}}>\r\n            <div className=\"bannercontent\">\r\n            <h1 ref={ref}>{data?.name || data?.original_name}</h1>\r\n            <h4 ref={des}>{description(data?.overview)}</h4>\r\n            <div className=\"bannerbuttons\">\r\n                <button className=\"play\"><PlayArrowIcon  style={{marginRight:\"5px\"}} fontSize=\"small\"></PlayArrowIcon>Play</button>\r\n                <button className=\"info\"><InfoOutlinedIcon style={{color:\"white\",marginRight:\"5px\"}} fontSize=\"small\"></InfoOutlinedIcon>More Info</button>\r\n            </div>\r\n            </div>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from \"./axios\";\r\nimport \"./row.css\";\r\nfunction Row({title,fetchurl}){\r\n    const [rdata,setdata]=useState([]);\r\n    useEffect(()=>{\r\n        const rowdata=async()=>{\r\n            const {data}=await axios.get(fetchurl);\r\n            setdata(data.results);\r\n        }\r\n        rowdata();\r\n    },[])\r\n    console.log(rdata);\r\n    return (\r\n        <div className=\"rowdiv\">\r\n            <h2 id={title}>{title}</h2>\r\n            <div className=\"inrowdiv\">\r\n            {rdata.map((element)=>(\r\n                <div className=\"movie\" key={element.id} style={{backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${element?.poster_path || element?.backdrop_path}\")`}}>\r\n                </div>\r\n            ))}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default Row;","import React from 'react'\r\nimport Homenav from \"./Homenav\";\r\nimport Banner from \"./Banner\";\r\nimport request from \"./requests\";\r\nimport Row from \"./Row\";\r\nfunction Home() {\r\n    return (\r\n        <div style={{backgroundColor:\"black\"}}>\r\n        <Homenav/>\r\n        <Banner/>\r\n        <Row title=\"Netflix Originals\" fetchurl={request.fetchNetflixOriginals}/>\r\n        <Row title=\"Trending\" fetchurl={request.fetchTrending}/>\r\n        <Row title=\"Top Rated\" fetchurl={request.fetchtoprated}/>\r\n        <Row title=\"Action Movies\" fetchurl={request.fetchActionMovies}/>\r\n        <Row title=\"Comedy Movies\" fetchurl={request.fetchComedyMovies}/>\r\n        <Row title=\"Horror Movies\" fetchurl={request.fetchHorrorMovies}/>\r\n        <Row title=\"Romantic Movies\" fetchurl={request.fetchRomanceMovies}/>\r\n        <Row title=\"Documentaries\" fetchurl={request.fetchDocumentaries}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","import React, {useRef, useState} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport \"./siginpage.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {auth} from \"./firebase\";\r\nimport {selectemail,setsignin} from \"./features/user/userSlice\";\r\nfunction Siginpage() {\r\n    const [username,setuser]=useState(\"\");\r\n    const [err,seterror]=useState(\"\");\r\n    const history=useHistory();\r\n    const dispatch=useDispatch();\r\n  const useremail=useSelector(selectemail);\r\n//   const u=useSelector(selectu);\r\n  const email=useRef(null);\r\n  const password=useRef(null);\r\n \r\n    function handlesubmit(e){\r\n        e.preventDefault();\r\n        try{\r\n            auth.signInWithEmailAndPassword(email.current.value,password.current.value).then((result)=>{\r\n                dispatch(setsignin({\r\n                    email:result.user.email\r\n                }));\r\n                setuser(result.user.email);\r\n                history.push(\"/home\");\r\n            }).catch((e)=>{\r\n                console.log(e);\r\n                seterror(e.message);\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    console.log(username);\r\n    console.log(useremail);\r\n    // console.log(u);\r\n    return (\r\n        <div className=\"loginpages\">\r\n            <div className=\"blackpage\">\r\n            <div className=\"lognav\">\r\n                <Link to=\"/home\">\r\n            <img src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\" alt=\"\"></img></Link></div>\r\n            <div className=\"form\">\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={handlesubmit}>    \r\n                    <div className=\"input\"><input type=\"email\" placeholder=\"Email\" ref={email}/></div>\r\n                    <div className=\"input\"><input type=\"password\" placeholder=\"Password\" ref={password}/></div>\r\n                    {err && (<div style={{width:\"350px\"}}>{err}</div>)}\r\n                    <input type=\"submit\" value=\"Sign In\"></input>\r\n                </form>\r\n                <p>New to Netflix? <Link to=\"/login\"><span>Sign up now</span></Link></p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Siginpage;\r\n","import React from 'react'\r\nimport \"./profile.css\";\r\nimport {auth} from \"./firebase\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {setsignout,selectemail} from \"./features/user/userSlice\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n    console.log(\"hellllllllllllllllllllllllooooooooooooo\");\r\n    const dispatch= useDispatch();\r\n    const history=useHistory();\r\n    const user=useSelector(selectemail);\r\n    function handlesignout(){\r\n        auth.signOut().then(()=>{\r\n             dispatch(setsignout());\r\n             history.push(\"./login\");\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n        })\r\n    }\r\n    console.log(user);\r\n    return (\r\n        <div style={{backgroundColor:\"black\",width:\"100vw\",height:\"100vh\"}}>\r\n        <div className={`lognavss`}>\r\n            <img src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\" alt=\"\" id=\"netflixlogos\"/>\r\n            <div style={{display:\"flex\"}}>\r\n            <Link to=\"/signin\"><button className=\"btn\">Sign In</button></Link>\r\n            <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"\" id=\"imgs\"/></div>\r\n        </div>\r\n        <div className=\"main1\">\r\n            <h2>Edit Profile</h2>\r\n            <div style={{display:\"flex\"}}>\r\n            <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"\" id=\"imgs2\"/>\r\n            <div className=\"sidebox\">\r\n                <div className=\"email\">{user}</div>\r\n                <div style={{fontSize:\"20px\",padding:\"5px\"}}>Plans(Current Plan:Premium)</div>\r\n                <div className=\"bigdiv\">\r\n                    <p>Renewal date:04/03/2021</p>\r\n                    <div className=\"subscribe\">\r\n                        <div><h4>Netflix Standard</h4><p>1030p</p></div>\r\n                        <button>Subscribe</button>\r\n                    </div>\r\n                    <div className=\"subscribe\">\r\n                    <div><h4>Netflix Basic</h4><p>480p</p></div>\r\n                    <button>Subscribe</button>\r\n                    </div>\r\n                    <div className=\"subscribe\">\r\n                    <div><h4>Netflix Premium</h4><p>4X+HDB</p></div>\r\n                    <button>Subscribe</button>\r\n                    </div>\r\n                </div>\r\n                <button className=\"Signout\" onClick={handlesignout}>Sign out</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useRef, useState,useContext } from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {auth} from \"./firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./signup.css\";\r\n// import {useDispatch} from \"react-redux\";\r\n// import {selectu,setsignup} from \"./features/user/userSlice\";\r\nfunction Signup(props) {\r\n    const history=useHistory();\r\n    const {id}=useParams();\r\n    const ref=useRef();\r\n    // const dispatch=useDispatch();\r\n    const [err,seterror]=useState(\"\");\r\n   \r\n//   console.log(useSelector(selectu));\r\n    function handlesubmit(e){\r\n        e.preventDefault();\r\n        try{\r\n            auth.createUserWithEmailAndPassword(id,ref.current.value).then((r)=>{\r\n                console.log(r);\r\n            history.push(\"/profile\")\r\n            }).catch((e)=>{\r\n                console.log(e);\r\n                seterror(e.message);\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div style={{backgroundColor:\"white\"}}>\r\n        <div className=\"signnav\">\r\n                <Link to=\"/\">\r\n            <img src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\" alt=\"\"></img></Link>\r\n           <Link to=\"/signin\"> <button className=\"btn\">Sign In</button></Link></div>\r\n            <div className=\"sigincontent\">\r\n                <h2>Joining Netflix is easy.</h2>\r\n                <p>Enter your password and you will be watching in no time.</p>\r\n                <p>Email</p>\r\n                <p><b>{id}</b></p>\r\n                <form onSubmit={handlesubmit}>\r\n                <input type=\"password\" placeholder=\"Enter Your Password\" ref={ref} required/>\r\n                {err && (<div>{err}</div>)}\r\n                <button type=\"submit\">Next</button></form>\r\n            </div>\r\n        </div>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n// import { useAuth } from \"../contexts/AuthContext\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectemail } from \"./features/user/userSlice\"\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n//   const { currentUser } = useAuth()\r\n// This is for private rout means when user is not login take user to private rout\r\nconst u=useSelector(selectemail);\r\nconsole.log(u);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return u ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Login from \"./loginpage\";\nimport Home from \"./home\";\nimport Signin from \"./siginpage\";\nimport Profile from \"./Profile\";\nimport Signup from \"./signup\";\nimport {selectemail} from \"./features/user/userSlice\";\nimport {useSelector} from \"react-redux\";\nimport PrivateRoute from './private';\nexport const r=React.createContext(\"\");\nfunction App() {\n  const us=useSelector(selectemail);\n  console.log(us);\n  return (\n      <>\n    <Router>\n      <Switch>\n      <PrivateRoute path=\"/\" exact component={Home}></PrivateRoute>\n      <PrivateRoute exact path=\"/home\" component={Home} />\n      {/* <Route path=\"/home\">{us?<Home/>:<Signin/>}</Route> */}\n      <Route path=\"/login\"><Login/></Route>\n      <Route path=\"/signin\"><Signin/></Route>\n      <Route path=\"/signup/:id\"><Signup/></Route>\n      <Route path=\"/profile\"><Profile/></Route>\n    </Switch>\n    </Router>\n    </>\n  );\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userreducer from \"../features/user/userSlice\";\nexport const store = configureStore({\n  reducer: {\n    user: userreducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}